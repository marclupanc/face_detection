{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithFaceDescriptor } from '../factories/WithFaceDescriptor';\nimport { ComposableTask } from './ComposableTask';\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderWithFaceAlignmentTask } from './PredictAgeAndGenderTask';\nimport { PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsWithFaceAlignmentTask } from './PredictFaceExpressionsTask';\n\nvar ComputeFaceDescriptorsTaskBase =\n/** @class */\nfunction (_super) {\n  __extends(ComputeFaceDescriptorsTaskBase, _super);\n\n  function ComputeFaceDescriptorsTaskBase(parentTask, input) {\n    var _this = _super.call(this) || this;\n\n    _this.parentTask = parentTask;\n    _this.input = input;\n    return _this;\n  }\n\n  return ComputeFaceDescriptorsTaskBase;\n}(ComposableTask);\n\nexport { ComputeFaceDescriptorsTaskBase };\n\nvar ComputeAllFaceDescriptorsTask =\n/** @class */\nfunction (_super) {\n  __extends(ComputeAllFaceDescriptorsTask, _super);\n\n  function ComputeAllFaceDescriptorsTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ComputeAllFaceDescriptorsTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResults, descriptors;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.parentTask];\n\n          case 1:\n            parentResults = _a.sent();\n            return [4\n            /*yield*/\n            , extractAllFacesAndComputeResults(parentResults, this.input, function (faces) {\n              return Promise.all(faces.map(function (face) {\n                return nets.faceRecognitionNet.computeFaceDescriptor(face);\n              }));\n            }, null, function (parentResult) {\n              return parentResult.landmarks.align(null, {\n                useDlibAlignment: true\n              });\n            })];\n\n          case 2:\n            descriptors = _a.sent();\n            return [2\n            /*return*/\n            , descriptors.map(function (descriptor, i) {\n              return extendWithFaceDescriptor(parentResults[i], descriptor);\n            })];\n        }\n      });\n    });\n  };\n\n  ComputeAllFaceDescriptorsTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n\n  ComputeAllFaceDescriptorsTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n\n  return ComputeAllFaceDescriptorsTask;\n}(ComputeFaceDescriptorsTaskBase);\n\nexport { ComputeAllFaceDescriptorsTask };\n\nvar ComputeSingleFaceDescriptorTask =\n/** @class */\nfunction (_super) {\n  __extends(ComputeSingleFaceDescriptorTask, _super);\n\n  function ComputeSingleFaceDescriptorTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ComputeSingleFaceDescriptorTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentResult, descriptor;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.parentTask];\n\n          case 1:\n            parentResult = _a.sent();\n\n            if (!parentResult) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , extractSingleFaceAndComputeResult(parentResult, this.input, function (face) {\n              return nets.faceRecognitionNet.computeFaceDescriptor(face);\n            }, null, function (parentResult) {\n              return parentResult.landmarks.align(null, {\n                useDlibAlignment: true\n              });\n            })];\n\n          case 2:\n            descriptor = _a.sent();\n            return [2\n            /*return*/\n            , extendWithFaceDescriptor(parentResult, descriptor)];\n        }\n      });\n    });\n  };\n\n  ComputeSingleFaceDescriptorTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\n  };\n\n  ComputeSingleFaceDescriptorTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\n  };\n\n  return ComputeSingleFaceDescriptorTask;\n}(ComputeFaceDescriptorsTaskBase);\n\nexport { ComputeSingleFaceDescriptorTask };","map":{"version":3,"mappings":";AACA,SAASA,wBAAT,QAA6D,iCAA7D;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gCAAT,EAA2CC,iCAA3C,QAAoF,iCAApF;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SACEC,2CADF,EAEEC,8CAFF,QAGO,2BAHP;AAIA,SACEC,8CADF,EAEEC,iDAFF,QAGO,8BAHP;;AAKA;AAAA;AAAA;EAA4EC;;EAC1E,wCACYC,UADZ,EAEYC,KAFZ,EAE4B;IAF5B,YAIEC,qBAAO,IAJT;;IACYC;IACAA;;EAGX;;EACH;AAAC,CAPD,CAA4EZ,cAA5E;;;;AASA;AAAA;AAAA;EAEUQ;;EAFV;;EA4BC;;EAxBcK,8CAAb;;;;;;YAEwB;YAAA;YAAA,EAAM,KAAKJ,UAAX;;;YAAhBK,aAAa,GAAGC,SAAhB;YAEc;YAAA;YAAA,EAAMd,gCAAgC,CACxDa,aADwD,EAExD,KAAKJ,KAFmD,EAGxD,iBAAK;cAAI,cAAO,CAACM,GAAR,CAAYC,KAAK,CAACC,GAAN,CAAU,gBAAI;gBACjC,WAAI,CAACC,kBAAL,CAAwBC,qBAAxB,CAA8CC,IAA9C;cAA4E,CADzD,CAAZ;YAEP,CALsD,EAMxD,IANwD,EAOxD,wBAAY;cAAI,mBAAY,CAACC,SAAb,CAAuBC,KAAvB,CAA6B,IAA7B,EAAmC;gBAAEC,gBAAgB,EAAE;cAApB,CAAnC;YAA8D,CAPtB,CAAtC;;;YAAdC,WAAW,GAAGV,SAAd;YAUN;YAAA;YAAA,EAAOU,WAAW,CAACP,GAAZ,CAAgB,UAACQ,UAAD,EAAaC,CAAb,EAAc;cAAK,+BAAwB,CAAUb,aAAa,CAACa,CAAD,CAAvB,EAA4BD,UAA5B,CAAxB;YAA+D,CAAlG,CAAP;;;;EACD,CAfY;;EAiBbb;IACE,OAAO,IAAIP,8CAAJ,CAAmD,IAAnD,EAAyD,KAAKI,KAA9D,CAAP;EACD,CAFD;;EAIAG;IACE,OAAO,IAAIT,2CAAJ,CAAgD,IAAhD,EAAsD,KAAKM,KAA3D,CAAP;EACD,CAFD;;EAGF;AAAC,CA5BD,CAEUkB,8BAFV;;;;AA8BA;AAAA;AAAA;EAEUpB;;EAFV;;EA4BC;;EAxBcqB,gDAAb;;;;;;YAEuB;YAAA;YAAA,EAAM,KAAKpB,UAAX;;;YAAfqB,YAAY,GAAGf,SAAf;;YACN,IAAI,CAACe,YAAL,EAAmB;cACjB;cAAA;cAAA;YACD;;YACkB;YAAA;YAAA,EAAM5B,iCAAiC,CACxD4B,YADwD,EAExD,KAAKpB,KAFmD,EAGxD,gBAAI;cAAI,WAAI,CAACS,kBAAL,CAAwBC,qBAAxB,CAA8CC,IAA9C;YAA4E,CAH5B,EAIxD,IAJwD,EAKxD,wBAAY;cAAI,mBAAY,CAACC,SAAb,CAAuBC,KAAvB,CAA6B,IAA7B,EAAmC;gBAAEC,gBAAgB,EAAE;cAApB,CAAnC;YAA8D,CALtB,CAAvC;;;YAAbE,UAAU,GAAGX,SAAb;YAQN;YAAA;YAAA,EAAOhB,wBAAwB,CAAC+B,YAAD,EAAeJ,UAAf,CAA/B;;;;EACD,CAfY;;EAiBbG;IACE,OAAO,IAAItB,iDAAJ,CAAsD,IAAtD,EAA4D,KAAKG,KAAjE,CAAP;EACD,CAFD;;EAIAmB;IACE,OAAO,IAAIxB,8CAAJ,CAAmD,IAAnD,EAAyD,KAAKK,KAA9D,CAAP;EACD,CAFD;;EAGF;AAAC,CA5BD,CAEUkB,8BAFV","names":["extendWithFaceDescriptor","ComposableTask","extractAllFacesAndComputeResults","extractSingleFaceAndComputeResult","nets","PredictAllAgeAndGenderWithFaceAlignmentTask","PredictSingleAgeAndGenderWithFaceAlignmentTask","PredictAllFaceExpressionsWithFaceAlignmentTask","PredictSingleFaceExpressionsWithFaceAlignmentTask","__extends","parentTask","input","_super","_this","ComputeAllFaceDescriptorsTask","parentResults","_a","all","faces","map","faceRecognitionNet","computeFaceDescriptor","face","landmarks","align","useDlibAlignment","descriptors","descriptor","i","ComputeFaceDescriptorsTaskBase","ComputeSingleFaceDescriptorTask","parentResult"],"sources":["../../../src/globalApi/ComputeFaceDescriptorsTasks.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}