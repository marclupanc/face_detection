{"ast":null,"code":"import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\n\nfunction extractorsFactory(weightMap, paramMappings) {\n  var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\n\n  function extractBatchNormParams(prefix) {\n    var sub = extractWeightEntry(prefix + \"/sub\", 1);\n    var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\n    return {\n      sub: sub,\n      truediv: truediv\n    };\n  }\n\n  function extractConvParams(prefix) {\n    var filters = extractWeightEntry(prefix + \"/filters\", 4);\n    var bias = extractWeightEntry(prefix + \"/bias\", 1);\n    return {\n      filters: filters,\n      bias: bias\n    };\n  }\n\n  function extractConvWithBatchNormParams(prefix) {\n    var conv = extractConvParams(prefix + \"/conv\");\n    var bn = extractBatchNormParams(prefix + \"/bn\");\n    return {\n      conv: conv,\n      bn: bn\n    };\n  }\n\n  var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\n  return {\n    extractConvParams: extractConvParams,\n    extractConvWithBatchNormParams: extractConvWithBatchNormParams,\n    extractSeparableConvParams: extractSeparableConvParams\n  };\n}\n\nexport function extractParamsFromWeigthMap(weightMap, config) {\n  var paramMappings = [];\n\n  var _a = extractorsFactory(weightMap, paramMappings),\n      extractConvParams = _a.extractConvParams,\n      extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams,\n      extractSeparableConvParams = _a.extractSeparableConvParams;\n\n  var params;\n\n  if (config.withSeparableConvs) {\n    var numFilters = config.filterSizes && config.filterSizes.length || 9;\n    params = {\n      conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\n      conv1: extractSeparableConvParams('conv1'),\n      conv2: extractSeparableConvParams('conv2'),\n      conv3: extractSeparableConvParams('conv3'),\n      conv4: extractSeparableConvParams('conv4'),\n      conv5: extractSeparableConvParams('conv5'),\n      conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\n      conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\n      conv8: extractConvParams('conv8')\n    };\n  } else {\n    params = {\n      conv0: extractConvWithBatchNormParams('conv0'),\n      conv1: extractConvWithBatchNormParams('conv1'),\n      conv2: extractConvWithBatchNormParams('conv2'),\n      conv3: extractConvWithBatchNormParams('conv3'),\n      conv4: extractConvWithBatchNormParams('conv4'),\n      conv5: extractConvWithBatchNormParams('conv5'),\n      conv6: extractConvWithBatchNormParams('conv6'),\n      conv7: extractConvWithBatchNormParams('conv7'),\n      conv8: extractConvParams('conv8')\n    };\n  }\n\n  disposeUnusedWeightTensors(weightMap, paramMappings);\n  return {\n    params: params,\n    paramMappings: paramMappings\n  };\n}","map":{"version":3,"mappings":"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","names":["disposeUnusedWeightTensors","loadSeparableConvParamsFactory","extractWeightEntryFactory","extractorsFactory","weightMap","paramMappings","extractWeightEntry","extractBatchNormParams","prefix","sub","truediv","extractConvParams","filters","bias","extractConvWithBatchNormParams","conv","bn","extractSeparableConvParams","extractParamsFromWeigthMap","config","params","withSeparableConvs","numFilters","filterSizes","length","conv0","isFirstLayerConv2d","conv1","conv2","conv3","conv4","conv5","conv6","undefined","conv7","conv8"],"sources":["../../../src/tinyYolov2/extractParamsFromWeigthMap.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}