{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { leaky } from './leaky';\nexport function convWithBatchNorm(x, params) {\n  return tf.tidy(function () {\n    var out = tf.pad(x, [[0, 0], [1, 1], [1, 1], [0, 0]]);\n    out = tf.conv2d(out, params.conv.filters, [1, 1], 'valid');\n    out = tf.sub(out, params.bn.sub);\n    out = tf.mul(out, params.bn.truediv);\n    out = tf.add(out, params.conv.bias);\n    return leaky(out);\n  });\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,uBAApB;AAEA,SAASC,KAAT,QAAsB,SAAtB;AAGA,OAAM,SAAUC,iBAAV,CAA4BC,CAA5B,EAA4CC,MAA5C,EAAqE;EACzE,OAAOJ,EAAE,CAACK,IAAH,CAAQ;IACb,IAAIC,GAAG,GAAGN,EAAE,CAACO,GAAH,CAAOJ,CAAP,EAAU,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,CAAV,CAAV;IAEAG,GAAG,GAAGN,EAAE,CAACQ,MAAH,CAAUF,GAAV,EAAeF,MAAM,CAACK,IAAP,CAAYC,OAA3B,EAAoC,CAAC,CAAD,EAAI,CAAJ,CAApC,EAA4C,OAA5C,CAAN;IACAJ,GAAG,GAAGN,EAAE,CAACW,GAAH,CAAOL,GAAP,EAAYF,MAAM,CAACQ,EAAP,CAAUD,GAAtB,CAAN;IACAL,GAAG,GAAGN,EAAE,CAACa,GAAH,CAAOP,GAAP,EAAYF,MAAM,CAACQ,EAAP,CAAUE,OAAtB,CAAN;IACAR,GAAG,GAAGN,EAAE,CAACe,GAAH,CAAOT,GAAP,EAAYF,MAAM,CAACK,IAAP,CAAYO,IAAxB,CAAN;IAEA,OAAOf,KAAK,CAACK,GAAD,CAAZ;EACD,CATM,CAAP;AAUD","names":["tf","leaky","convWithBatchNorm","x","params","tidy","out","pad","conv2d","conv","filters","sub","bn","mul","truediv","add","bias"],"sources":["../../../src/tinyYolov2/convWithBatchNorm.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}