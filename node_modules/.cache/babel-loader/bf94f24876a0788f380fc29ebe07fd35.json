{"ast":null,"code":"import * as tf from '@tensorflow/tfjs-core';\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\nvar epsilon = 0.0010000000474974513;\n\nfunction depthwiseConvLayer(x, params, strides) {\n  return tf.tidy(function () {\n    var out = tf.depthwiseConv2d(x, params.filters, strides, 'same');\n    out = tf.batchNorm(out, params.batch_norm_mean, params.batch_norm_variance, params.batch_norm_offset, params.batch_norm_scale, epsilon);\n    return tf.clipByValue(out, 0, 6);\n  });\n}\n\nfunction getStridesForLayerIdx(layerIdx) {\n  return [2, 4, 6, 12].some(function (idx) {\n    return idx === layerIdx;\n  }) ? [2, 2] : [1, 1];\n}\n\nexport function mobileNetV1(x, params) {\n  return tf.tidy(function () {\n    var conv11 = null;\n    var out = pointwiseConvLayer(x, params.conv_0, [2, 2]);\n    var convPairParams = [params.conv_1, params.conv_2, params.conv_3, params.conv_4, params.conv_5, params.conv_6, params.conv_7, params.conv_8, params.conv_9, params.conv_10, params.conv_11, params.conv_12, params.conv_13];\n    convPairParams.forEach(function (param, i) {\n      var layerIdx = i + 1;\n      var depthwiseConvStrides = getStridesForLayerIdx(layerIdx);\n      out = depthwiseConvLayer(out, param.depthwise_conv, depthwiseConvStrides);\n      out = pointwiseConvLayer(out, param.pointwise_conv, [1, 1]);\n\n      if (layerIdx === 11) {\n        conv11 = out;\n      }\n    });\n\n    if (conv11 === null) {\n      throw new Error('mobileNetV1 - output of conv layer 11 is null');\n    }\n\n    return {\n      out: out,\n      conv11: conv11\n    };\n  });\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,uBAApB;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;AAGA,IAAMC,OAAO,GAAG,qBAAhB;;AAEA,SAASC,kBAAT,CACEC,CADF,EAEEC,MAFF,EAGEC,OAHF,EAG2B;EAEzB,OAAON,EAAE,CAACO,IAAH,CAAQ;IAEb,IAAIC,GAAG,GAAGR,EAAE,CAACS,eAAH,CAAmBL,CAAnB,EAAsBC,MAAM,CAACK,OAA7B,EAAsCJ,OAAtC,EAA+C,MAA/C,CAAV;IACAE,GAAG,GAAGR,EAAE,CAACW,SAAH,CACJH,GADI,EAEJH,MAAM,CAACO,eAFH,EAGJP,MAAM,CAACQ,mBAHH,EAIJR,MAAM,CAACS,iBAJH,EAKJT,MAAM,CAACU,gBALH,EAMJb,OANI,CAAN;IAQA,OAAOF,EAAE,CAACgB,WAAH,CAAeR,GAAf,EAAoB,CAApB,EAAuB,CAAvB,CAAP;EAED,CAbM,CAAP;AAcD;;AAED,SAASS,qBAAT,CAA+BC,QAA/B,EAA+C;EAC7C,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAcC,IAAd,CAAmB,eAAG;IAAI,UAAG,KAAKD,QAAR;EAAgB,CAA1C,IAA8C,CAAC,CAAD,EAAI,CAAJ,CAA9C,GAAuD,CAAC,CAAD,EAAI,CAAJ,CAA9D;AACD;;AAED,OAAM,SAAUE,WAAV,CAAsBhB,CAAtB,EAAsCC,MAAtC,EAAgE;EACpE,OAAOL,EAAE,CAACO,IAAH,CAAQ;IAEb,IAAIc,MAAM,GAAG,IAAb;IACA,IAAIb,GAAG,GAAGP,kBAAkB,CAACG,CAAD,EAAIC,MAAM,CAACiB,MAAX,EAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAA5B;IAEA,IAAMC,cAAc,GAAG,CACrBlB,MAAM,CAACmB,MADc,EAErBnB,MAAM,CAACoB,MAFc,EAGrBpB,MAAM,CAACqB,MAHc,EAIrBrB,MAAM,CAACsB,MAJc,EAKrBtB,MAAM,CAACuB,MALc,EAMrBvB,MAAM,CAACwB,MANc,EAOrBxB,MAAM,CAACyB,MAPc,EAQrBzB,MAAM,CAAC0B,MARc,EASrB1B,MAAM,CAAC2B,MATc,EAUrB3B,MAAM,CAAC4B,OAVc,EAWrB5B,MAAM,CAAC6B,OAXc,EAYrB7B,MAAM,CAAC8B,OAZc,EAarB9B,MAAM,CAAC+B,OAbc,CAAvB;IAgBAb,cAAc,CAACc,OAAf,CAAuB,UAACC,KAAD,EAAQC,CAAR,EAAS;MAC9B,IAAMrB,QAAQ,GAAGqB,CAAC,GAAG,CAArB;MACA,IAAMC,oBAAoB,GAAGvB,qBAAqB,CAACC,QAAD,CAAlD;MACAV,GAAG,GAAGL,kBAAkB,CAACK,GAAD,EAAM8B,KAAK,CAACG,cAAZ,EAA4BD,oBAA5B,CAAxB;MACAhC,GAAG,GAAGP,kBAAkB,CAACO,GAAD,EAAM8B,KAAK,CAACI,cAAZ,EAA4B,CAAC,CAAD,EAAI,CAAJ,CAA5B,CAAxB;;MACA,IAAIxB,QAAQ,KAAK,EAAjB,EAAqB;QACnBG,MAAM,GAAGb,GAAT;MACD;IACF,CARD;;IAUA,IAAIa,MAAM,KAAK,IAAf,EAAqB;MACnB,MAAM,IAAIsB,KAAJ,CAAU,+CAAV,CAAN;IACD;;IAED,OAAO;MACLnC,GAAG,KADE;MAELa,MAAM,EAAEA;IAFH,CAAP;EAKD,CAxCM,CAAP;AAyCD","names":["tf","pointwiseConvLayer","epsilon","depthwiseConvLayer","x","params","strides","tidy","out","depthwiseConv2d","filters","batchNorm","batch_norm_mean","batch_norm_variance","batch_norm_offset","batch_norm_scale","clipByValue","getStridesForLayerIdx","layerIdx","some","mobileNetV1","conv11","conv_0","convPairParams","conv_1","conv_2","conv_3","conv_4","conv_5","conv_6","conv_7","conv_8","conv_9","conv_10","conv_11","conv_12","conv_13","forEach","param","i","depthwiseConvStrides","depthwise_conv","pointwise_conv","Error"],"sources":["../../../src/ssdMobilenetv1/mobileNetV1.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}