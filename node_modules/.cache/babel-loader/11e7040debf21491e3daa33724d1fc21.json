{"ast":null,"code":"import { FaceLandmarks } from '../classes/FaceLandmarks';\nimport { FaceLandmarks68 } from '../classes/FaceLandmarks68';\nimport { getContext2dOrThrow } from '../dom/getContext2dOrThrow';\nimport { isWithFaceLandmarks } from '../factories/WithFaceLandmarks';\nimport { drawContour } from './drawContour';\n\nvar DrawFaceLandmarksOptions =\n/** @class */\nfunction () {\n  function DrawFaceLandmarksOptions(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _a = options.drawLines,\n        drawLines = _a === void 0 ? true : _a,\n        _b = options.drawPoints,\n        drawPoints = _b === void 0 ? true : _b,\n        lineWidth = options.lineWidth,\n        lineColor = options.lineColor,\n        pointSize = options.pointSize,\n        pointColor = options.pointColor;\n    this.drawLines = drawLines;\n    this.drawPoints = drawPoints;\n    this.lineWidth = lineWidth || 1;\n    this.pointSize = pointSize || 2;\n    this.lineColor = lineColor || 'rgba(0, 255, 255, 1)';\n    this.pointColor = pointColor || 'rgba(255, 0, 255, 1)';\n  }\n\n  return DrawFaceLandmarksOptions;\n}();\n\nexport { DrawFaceLandmarksOptions };\n\nvar DrawFaceLandmarks =\n/** @class */\nfunction () {\n  function DrawFaceLandmarks(faceLandmarks, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.faceLandmarks = faceLandmarks;\n    this.options = new DrawFaceLandmarksOptions(options);\n  }\n\n  DrawFaceLandmarks.prototype.draw = function (canvasArg) {\n    var ctx = getContext2dOrThrow(canvasArg);\n    var _a = this.options,\n        drawLines = _a.drawLines,\n        drawPoints = _a.drawPoints,\n        lineWidth = _a.lineWidth,\n        lineColor = _a.lineColor,\n        pointSize = _a.pointSize,\n        pointColor = _a.pointColor;\n\n    if (drawLines && this.faceLandmarks instanceof FaceLandmarks68) {\n      ctx.strokeStyle = lineColor;\n      ctx.lineWidth = lineWidth;\n      drawContour(ctx, this.faceLandmarks.getJawOutline());\n      drawContour(ctx, this.faceLandmarks.getLeftEyeBrow());\n      drawContour(ctx, this.faceLandmarks.getRightEyeBrow());\n      drawContour(ctx, this.faceLandmarks.getNose());\n      drawContour(ctx, this.faceLandmarks.getLeftEye(), true);\n      drawContour(ctx, this.faceLandmarks.getRightEye(), true);\n      drawContour(ctx, this.faceLandmarks.getMouth(), true);\n    }\n\n    if (drawPoints) {\n      ctx.strokeStyle = pointColor;\n      ctx.fillStyle = pointColor;\n\n      var drawPoint = function (pt) {\n        ctx.beginPath();\n        ctx.arc(pt.x, pt.y, pointSize, 0, 2 * Math.PI);\n        ctx.fill();\n      };\n\n      this.faceLandmarks.positions.forEach(drawPoint);\n    }\n  };\n\n  return DrawFaceLandmarks;\n}();\n\nexport { DrawFaceLandmarks };\nexport function drawFaceLandmarks(canvasArg, faceLandmarks) {\n  var faceLandmarksArray = Array.isArray(faceLandmarks) ? faceLandmarks : [faceLandmarks];\n  faceLandmarksArray.forEach(function (f) {\n    var landmarks = f instanceof FaceLandmarks ? f : isWithFaceLandmarks(f) ? f.landmarks : undefined;\n\n    if (!landmarks) {\n      throw new Error('drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof');\n    }\n\n    new DrawFaceLandmarks(landmarks).draw(canvasArg);\n  });\n}","map":{"version":3,"mappings":"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","names":["FaceLandmarks","FaceLandmarks68","getContext2dOrThrow","isWithFaceLandmarks","drawContour","options","_b","drawPoints","lineWidth","lineColor","pointSize","pointColor","drawLines","faceLandmarks","DrawFaceLandmarksOptions","DrawFaceLandmarks","canvasArg","ctx","strokeStyle","getJawOutline","getLeftEyeBrow","getRightEyeBrow","getNose","getLeftEye","getRightEye","getMouth","fillStyle","drawPoint","pt","beginPath","arc","x","y","Math","PI","fill","positions","forEach","drawFaceLandmarks","faceLandmarksArray","Array","isArray","landmarks","f","undefined","Error","draw"],"sources":["../../../src/draw/DrawFaceLandmarks.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}