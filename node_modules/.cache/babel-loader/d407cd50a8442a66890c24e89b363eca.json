{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport * as tf from '@tensorflow/tfjs-core';\nimport { Point, Rect } from '../classes';\nimport { FaceDetection } from '../classes/FaceDetection';\nimport { FaceLandmarks5 } from '../classes/FaceLandmarks5';\nimport { toNetInput } from '../dom';\nimport { extendWithFaceDetection, extendWithFaceLandmarks } from '../factories';\nimport { NeuralNetwork } from '../NeuralNetwork';\nimport { bgrToRgbTensor } from './bgrToRgbTensor';\nimport { CELL_SIZE } from './config';\nimport { extractParams } from './extractParams';\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\nimport { getSizesForScale } from './getSizesForScale';\nimport { MtcnnOptions } from './MtcnnOptions';\nimport { pyramidDown } from './pyramidDown';\nimport { stage1 } from './stage1';\nimport { stage2 } from './stage2';\nimport { stage3 } from './stage3';\n\nvar Mtcnn =\n/** @class */\nfunction (_super) {\n  __extends(Mtcnn, _super);\n\n  function Mtcnn() {\n    return _super.call(this, 'Mtcnn') || this;\n  }\n\n  Mtcnn.prototype.load = function (weightsOrUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        console.warn('mtcnn is deprecated and will be removed soon');\n        return [2\n        /*return*/\n        , _super.prototype.load.call(this, weightsOrUrl)];\n      });\n    });\n  };\n\n  Mtcnn.prototype.loadFromDisk = function (filePath) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        console.warn('mtcnn is deprecated and will be removed soon');\n        return [2\n        /*return*/\n        , _super.prototype.loadFromDisk.call(this, filePath)];\n      });\n    });\n  };\n\n  Mtcnn.prototype.forwardInput = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var params, inputCanvas, stats, tsTotal, imgTensor, onReturn, _a, height, width, _b, minFaceSize, scaleFactor, maxNumScales, scoreThresholds, scaleSteps, scales, ts, out1, out2, out3, results;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            params = this.params;\n\n            if (!params) {\n              throw new Error('Mtcnn - load model before inference');\n            }\n\n            inputCanvas = input.canvases[0];\n\n            if (!inputCanvas) {\n              throw new Error('Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.');\n            }\n\n            stats = {};\n            tsTotal = Date.now();\n            imgTensor = tf.tidy(function () {\n              return bgrToRgbTensor(tf.expandDims(tf.browser.fromPixels(inputCanvas)).toFloat());\n            });\n\n            onReturn = function (results) {\n              // dispose tensors on return\n              imgTensor.dispose();\n              stats.total = Date.now() - tsTotal;\n              return results;\n            };\n\n            _a = imgTensor.shape.slice(1), height = _a[0], width = _a[1];\n            _b = new MtcnnOptions(forwardParams), minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\n            scales = (scaleSteps || pyramidDown(minFaceSize, scaleFactor, [height, width])).filter(function (scale) {\n              var sizes = getSizesForScale(scale, [height, width]);\n              return Math.min(sizes.width, sizes.height) > CELL_SIZE;\n            }).slice(0, maxNumScales);\n            stats.scales = scales;\n            stats.pyramid = scales.map(function (scale) {\n              return getSizesForScale(scale, [height, width]);\n            });\n            ts = Date.now();\n            return [4\n            /*yield*/\n            , stage1(imgTensor, scales, scoreThresholds[0], params.pnet, stats)];\n\n          case 1:\n            out1 = _c.sent();\n            stats.total_stage1 = Date.now() - ts;\n\n            if (!out1.boxes.length) {\n              return [2\n              /*return*/\n              , onReturn({\n                results: [],\n                stats: stats\n              })];\n            }\n\n            stats.stage2_numInputBoxes = out1.boxes.length; // using the inputCanvas to extract and resize the image patches, since it is faster\n            // than doing this on the gpu\n\n            ts = Date.now();\n            return [4\n            /*yield*/\n            , stage2(inputCanvas, out1.boxes, scoreThresholds[1], params.rnet, stats)];\n\n          case 2:\n            out2 = _c.sent();\n            stats.total_stage2 = Date.now() - ts;\n\n            if (!out2.boxes.length) {\n              return [2\n              /*return*/\n              , onReturn({\n                results: [],\n                stats: stats\n              })];\n            }\n\n            stats.stage3_numInputBoxes = out2.boxes.length;\n            ts = Date.now();\n            return [4\n            /*yield*/\n            , stage3(inputCanvas, out2.boxes, scoreThresholds[2], params.onet, stats)];\n\n          case 3:\n            out3 = _c.sent();\n            stats.total_stage3 = Date.now() - ts;\n            results = out3.boxes.map(function (box, idx) {\n              return extendWithFaceLandmarks(extendWithFaceDetection({}, new FaceDetection(out3.scores[idx], new Rect(box.left / width, box.top / height, box.width / width, box.height / height), {\n                height: height,\n                width: width\n              })), new FaceLandmarks5(out3.points[idx].map(function (pt) {\n                return pt.sub(new Point(box.left, box.top)).div(new Point(box.width, box.height));\n              }), {\n                width: box.width,\n                height: box.height\n              }));\n            });\n            return [2\n            /*return*/\n            , onReturn({\n              results: results,\n              stats: stats\n            })];\n        }\n      });\n    });\n  };\n\n  Mtcnn.prototype.forward = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4\n            /*yield*/\n            , toNetInput(input)];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.apply(this, [_b.sent(), forwardParams])];\n\n          case 2:\n            return [2\n            /*return*/\n            , _b.sent().results];\n        }\n      });\n    });\n  };\n\n  Mtcnn.prototype.forwardWithStats = function (input, forwardParams) {\n    if (forwardParams === void 0) {\n      forwardParams = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.forwardInput;\n            return [4\n            /*yield*/\n            , toNetInput(input)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.apply(this, [_b.sent(), forwardParams])];\n        }\n      });\n    });\n  };\n\n  Mtcnn.prototype.getDefaultModelName = function () {\n    return 'mtcnn_model';\n  };\n\n  Mtcnn.prototype.extractParamsFromWeigthMap = function (weightMap) {\n    return extractParamsFromWeigthMap(weightMap);\n  };\n\n  Mtcnn.prototype.extractParams = function (weights) {\n    return extractParams(weights);\n  };\n\n  return Mtcnn;\n}(NeuralNetwork);\n\nexport { Mtcnn };","map":{"version":3,"mappings":"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","names":["tf","Point","Rect","FaceDetection","FaceLandmarks5","toNetInput","extendWithFaceDetection","extendWithFaceLandmarks","NeuralNetwork","bgrToRgbTensor","CELL_SIZE","extractParams","extractParamsFromWeigthMap","getSizesForScale","MtcnnOptions","pyramidDown","stage1","stage2","stage3","__extends","_super","Mtcnn","weightsOrUrl","console","warn","load","call","filePath","loadFromDisk","input","forwardParams","params","Error","inputCanvas","canvases","stats","tsTotal","Date","now","imgTensor","tidy","expandDims","browser","fromPixels","toFloat","onReturn","results","dispose","total","_a","shape","slice","height","width","_b","minFaceSize","scaleFactor","maxNumScales","scoreThresholds","scaleSteps","scales","filter","sizes","scale","Math","min","pyramid","map","ts","pnet","out1","_c","total_stage1","boxes","length","stage2_numInputBoxes","rnet","out2","total_stage2","stage3_numInputBoxes","onet","out3","total_stage3","box","idx","scores","left","top","points","sub","div","forwardInput","weightMap","weights"],"sources":["../../../src/mtcnn/Mtcnn.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}