{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { extendWithFaceDetection } from '../factories/WithFaceDetection';\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\nimport { TinyFaceDetectorOptions } from '../tinyFaceDetector/TinyFaceDetectorOptions';\nimport { TinyYolov2Options } from '../tinyYolov2';\nimport { ComposableTask } from './ComposableTask';\nimport { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from './DetectFaceLandmarksTasks';\nimport { nets } from './nets';\nimport { PredictAllAgeAndGenderTask, PredictSingleAgeAndGenderTask } from './PredictAgeAndGenderTask';\nimport { PredictAllFaceExpressionsTask, PredictSingleFaceExpressionsTask } from './PredictFaceExpressionsTask';\n\nvar DetectFacesTaskBase =\n/** @class */\nfunction (_super) {\n  __extends(DetectFacesTaskBase, _super);\n\n  function DetectFacesTaskBase(input, options) {\n    if (options === void 0) {\n      options = new SsdMobilenetv1Options();\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.input = input;\n    _this.options = options;\n    return _this;\n  }\n\n  return DetectFacesTaskBase;\n}(ComposableTask);\n\nexport { DetectFacesTaskBase };\n\nvar DetectAllFacesTask =\n/** @class */\nfunction (_super) {\n  __extends(DetectAllFacesTask, _super);\n\n  function DetectAllFacesTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DetectAllFacesTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, input, options, faceDetectionFunction;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this, input = _a.input, options = _a.options;\n            if (!(options instanceof MtcnnOptions)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , nets.mtcnn.forward(input, options)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent().map(function (result) {\n              return result.detection;\n            })];\n\n          case 2:\n            faceDetectionFunction = options instanceof TinyFaceDetectorOptions ? function (input) {\n              return nets.tinyFaceDetector.locateFaces(input, options);\n            } : options instanceof SsdMobilenetv1Options ? function (input) {\n              return nets.ssdMobilenetv1.locateFaces(input, options);\n            } : options instanceof TinyYolov2Options ? function (input) {\n              return nets.tinyYolov2.locateFaces(input, options);\n            } : null;\n\n            if (!faceDetectionFunction) {\n              throw new Error('detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options');\n            }\n\n            return [2\n            /*return*/\n            , faceDetectionFunction(input)];\n        }\n      });\n    });\n  };\n\n  DetectAllFacesTask.prototype.runAndExtendWithFaceDetections = function () {\n    var _this = this;\n\n    return new Promise(function (res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var detections;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.run()];\n\n            case 1:\n              detections = _a.sent();\n              return [2\n              /*return*/\n              , res(detections.map(function (detection) {\n                return extendWithFaceDetection({}, detection);\n              }))];\n          }\n        });\n      });\n    });\n  };\n\n  DetectAllFacesTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\n    if (useTinyLandmarkNet === void 0) {\n      useTinyLandmarkNet = false;\n    }\n\n    return new DetectAllFaceLandmarksTask(this.runAndExtendWithFaceDetections(), this.input, useTinyLandmarkNet);\n  };\n\n  DetectAllFacesTask.prototype.withFaceExpressions = function () {\n    return new PredictAllFaceExpressionsTask(this.runAndExtendWithFaceDetections(), this.input);\n  };\n\n  DetectAllFacesTask.prototype.withAgeAndGender = function () {\n    return new PredictAllAgeAndGenderTask(this.runAndExtendWithFaceDetections(), this.input);\n  };\n\n  return DetectAllFacesTask;\n}(DetectFacesTaskBase);\n\nexport { DetectAllFacesTask };\n\nvar DetectSingleFaceTask =\n/** @class */\nfunction (_super) {\n  __extends(DetectSingleFaceTask, _super);\n\n  function DetectSingleFaceTask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DetectSingleFaceTask.prototype.run = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var faceDetections, faceDetectionWithHighestScore;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , new DetectAllFacesTask(this.input, this.options)];\n\n          case 1:\n            faceDetections = _a.sent();\n            faceDetectionWithHighestScore = faceDetections[0];\n            faceDetections.forEach(function (faceDetection) {\n              if (faceDetection.score > faceDetectionWithHighestScore.score) {\n                faceDetectionWithHighestScore = faceDetection;\n              }\n            });\n            return [2\n            /*return*/\n            , faceDetectionWithHighestScore];\n        }\n      });\n    });\n  };\n\n  DetectSingleFaceTask.prototype.runAndExtendWithFaceDetection = function () {\n    var _this = this;\n\n    return new Promise(function (res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var detection;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.run()];\n\n            case 1:\n              detection = _a.sent();\n              return [2\n              /*return*/\n              , res(detection ? extendWithFaceDetection({}, detection) : undefined)];\n          }\n        });\n      });\n    });\n  };\n\n  DetectSingleFaceTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\n    if (useTinyLandmarkNet === void 0) {\n      useTinyLandmarkNet = false;\n    }\n\n    return new DetectSingleFaceLandmarksTask(this.runAndExtendWithFaceDetection(), this.input, useTinyLandmarkNet);\n  };\n\n  DetectSingleFaceTask.prototype.withFaceExpressions = function () {\n    return new PredictSingleFaceExpressionsTask(this.runAndExtendWithFaceDetection(), this.input);\n  };\n\n  DetectSingleFaceTask.prototype.withAgeAndGender = function () {\n    return new PredictSingleAgeAndGenderTask(this.runAndExtendWithFaceDetection(), this.input);\n  };\n\n  return DetectSingleFaceTask;\n}(DetectFacesTaskBase);\n\nexport { DetectSingleFaceTask };","map":{"version":3,"mappings":";AAEA,SAASA,uBAAT,QAA2D,gCAA3D;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,qBAAT,QAAsC,yCAAtC;AACA,SAASC,uBAAT,QAAwC,6CAAxC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,0BAAT,EAAqCC,6BAArC,QAA0E,4BAA1E;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,0BAAT,EAAqCC,6BAArC,QAA0E,2BAA1E;AACA,SAASC,6BAAT,EAAwCC,gCAAxC,QAAgF,8BAAhF;;AAGA;AAAA;AAAA;EAAkDC;;EAChD,6BACYC,KADZ,EAEYC,OAFZ,EAEuE;IAA3D;MAAAA,cAAoCb,qBAApC;IAA2D;;IAFvE,YAIEc,qBAAO,IAJT;;IACYC;IACAA;;EAGX;;EACH;AAAC,CAPD,CAAkDZ,cAAlD;;;;AASA;AAAA;AAAA;EAAwCQ;;EAAxC;;EA0DC;;EAxDcK,mCAAb;;;;;;;YAEQC,KAAqB,IAArB,EAAEL,KAAK,WAAP,EAASC,OAAO,aAAhB;kBAEFA,OAAO,YAAYd,eAAnB;YAAA;YAAA;YACM;YAAA;YAAA,EAAMO,IAAI,CAACY,KAAL,CAAWC,OAAX,CAAmBP,KAAnB,EAA0BC,OAA1B,CAAN;;;YAAR;YAAA;YAAA,EAAQO,SAAD,CACJC,GADI,CACA,kBAAM;cAAI,aAAM,CAACC,SAAP;YAAgB,CAD1B,CAAP;;;YAIIC,qBAAqB,GAAGV,OAAO,YAAYZ,uBAAnB,GAC1B,UAACW,KAAD,EAAiB;cAAK,WAAI,CAACY,gBAAL,CAAsBC,WAAtB,CAAkCb,KAAlC,EAAyCC,OAAzC;YAAiD,CAD7C,GAG1BA,OAAO,YAAYb,qBAAnB,GACI,UAACY,KAAD,EAAiB;cAAK,WAAI,CAACc,cAAL,CAAoBD,WAApB,CAAgCb,KAAhC,EAAuCC,OAAvC;YAA+C,CADzE,GAGIA,OAAO,YAAYX,iBAAnB,GACI,UAACU,KAAD,EAAiB;cAAK,WAAI,CAACe,UAAL,CAAgBF,WAAhB,CAA4Bb,KAA5B,EAAmCC,OAAnC;YAA2C,CADrE,GAEI,IARN;;YAYN,IAAI,CAACU,qBAAL,EAA4B;cAC1B,MAAM,IAAIK,KAAJ,CAAU,qIAAV,CAAN;YACD;;YAED;YAAA;YAAA,EAAOL,qBAAqB,CAACX,KAAD,CAA5B;;;;EACD,CA1BY;;EA4BLI,8DAAR;IAAA;;IACE,OAAO,IAAIa,OAAJ,CAAqC,UAAMC,GAAN,EAAS;MAAA;;;;;cAChC;cAAA;cAAA,EAAM,KAAKC,GAAL,EAAN;;;cAAbC,UAAU,GAAGf,SAAb;cACN;cAAA;cAAA,EAAOa,GAAG,CAACE,UAAU,CAACX,GAAX,CAAe,qBAAS;gBAAI,8BAAuB,CAAC,EAAD,EAAKC,SAAL,CAAvB;cAAsC,CAAlE,CAAD,CAAV;;;OAFmD;IAGpD,CAHM,CAAP;EAID,CALO;;EAORN,2DAAkBiB,kBAAlB,EAAqD;IAAnC;MAAAA;IAAmC;;IACnD,OAAO,IAAI7B,0BAAJ,CACL,KAAK8B,8BAAL,EADK,EAEL,KAAKtB,KAFA,EAGLqB,kBAHK,CAAP;EAKD,CAND;;EAQAjB;IACE,OAAO,IAAIP,6BAAJ,CACL,KAAKyB,8BAAL,EADK,EAEL,KAAKtB,KAFA,CAAP;EAID,CALD;;EAOAI;IACE,OAAO,IAAIT,0BAAJ,CACL,KAAK2B,8BAAL,EADK,EAEL,KAAKtB,KAFA,CAAP;EAID,CALD;;EAMF;AAAC,CA1DD,CAAwCuB,mBAAxC;;;;AA4DA;AAAA;AAAA;EAA0CxB;;EAA1C;;EAyCC;;EAvCcyB,qCAAb;;;;;;YACyB;YAAA;YAAA,EAAM,IAAIpB,kBAAJ,CAAuB,KAAKJ,KAA5B,EAAmC,KAAKC,OAAxC,CAAN;;;YAAjBwB,cAAc,GAAGpB,SAAjB;YACFqB,6BAA6B,GAAGD,cAAc,CAAC,CAAD,CAA9C;YACJA,cAAc,CAACE,OAAf,CAAuB,yBAAa;cAClC,IAAIC,aAAa,CAACC,KAAd,GAAsBH,6BAA6B,CAACG,KAAxD,EAA+D;gBAC7DH,6BAA6B,GAAGE,aAAhC;cACD;YACF,CAJD;YAKA;YAAA;YAAA,EAAOF,6BAAP;;;;EACD,CATY;;EAWLF,+DAAR;IAAA;;IACE,OAAO,IAAIP,OAAJ,CAAmC,UAAMC,GAAN,EAAS;MAAA;;;;;cAC/B;cAAA;cAAA,EAAM,KAAKC,GAAL,EAAN;;;cAAZT,SAAS,GAAGL,SAAZ;cACN;cAAA;cAAA,EAAOa,GAAG,CAACR,SAAS,GAAGxB,uBAAuB,CAAK,EAAL,EAASwB,SAAT,CAA1B,GAAgDoB,SAA1D,CAAV;;;OAFiD;IAGlD,CAHM,CAAP;EAID,CALO;;EAORN,6DAAkBH,kBAAlB,EAAqD;IAAnC;MAAAA;IAAmC;;IACnD,OAAO,IAAI5B,6BAAJ,CACL,KAAKsC,6BAAL,EADK,EAEL,KAAK/B,KAFA,EAGLqB,kBAHK,CAAP;EAKD,CAND;;EAQAG;IACE,OAAO,IAAI1B,gCAAJ,CACL,KAAKiC,6BAAL,EADK,EAEL,KAAK/B,KAFA,CAAP;EAID,CALD;;EAOAwB;IACE,OAAO,IAAI5B,6BAAJ,CACL,KAAKmC,6BAAL,EADK,EAEL,KAAK/B,KAFA,CAAP;EAID,CALD;;EAMF;AAAC,CAzCD,CAA0CuB,mBAA1C","names":["extendWithFaceDetection","MtcnnOptions","SsdMobilenetv1Options","TinyFaceDetectorOptions","TinyYolov2Options","ComposableTask","DetectAllFaceLandmarksTask","DetectSingleFaceLandmarksTask","nets","PredictAllAgeAndGenderTask","PredictSingleAgeAndGenderTask","PredictAllFaceExpressionsTask","PredictSingleFaceExpressionsTask","__extends","input","options","_super","_this","DetectAllFacesTask","_a","mtcnn","forward","_b","map","detection","faceDetectionFunction","tinyFaceDetector","locateFaces","ssdMobilenetv1","tinyYolov2","Error","Promise","res","run","detections","useTinyLandmarkNet","runAndExtendWithFaceDetections","DetectFacesTaskBase","DetectSingleFaceTask","faceDetections","faceDetectionWithHighestScore","forEach","faceDetection","score","undefined","runAndExtendWithFaceDetection"],"sources":["../../../src/globalApi/DetectFacesTasks.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}